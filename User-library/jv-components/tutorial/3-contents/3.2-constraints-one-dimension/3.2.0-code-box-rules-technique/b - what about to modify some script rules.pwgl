(IN-PACKAGE :CCL)
;; this patch was saved with PWGL version 1.0 beta RC 17 (0.9.17-170)
(ASSERT-PATCH-SAVED-VERSION-NOT-NEWER-THAN (QUOTE ((0 9 17) 170)))
(LET ((WIN (MAKE-INSTANCE (QUOTE PWGL-PW-WINDOW) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "r1" :CURVAL NIL :VALUE-STRING "nil" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "more-rules" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "more-rules" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "more-rules" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL)) :X 0.7543160933777555D0 :Y 0.8047362038795172D0 :W 0.09127691619617506D0 :H 0.47915446935387896D0 :BOX-STRING "collect-script-rules" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1 1 1) :ORIG-GROUPING-LIST (LIST 1) :EXTENSION-PATTERN (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE JBS-CONSTRAINTS:COLLECT-SCRIPT-RULES) :OPEN-STATE-W 0.09127691619617506D0 :OPEN-STATE-H 0.47915446935387896D0 :CURRENT-EXTENSION-PATTERN-INDEX* 3) (MAKE-INSTANCE (QUOTE ENP-SCRIPT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "score" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "rules" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-MENUBOX-SUBVIEW) :BOX-STRING "selection?" :CURVAL 1 :MINVAL 0 :MAXVAL 1 :MENU-LIST :BOOLEAN-LIST :MENU-LIST-STRING "()")) :X 0.37705396956521087D0 :Y 0.9977412624176068D0 :W 0.26 :H 0.24 :BOX-STRING "enp-script" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1 1) :ORIG-GROUPING-LIST (LIST 1 1 1) :EXTENSION-PATTERN (LIST 1) :EXTENSION-LIMIT 5 :BORDER 0.012) :PW-FUNCTION (QUOTE ENP-SCRIPT) :OPEN-STATE-W 0.26 :OPEN-STATE-H 0.24) (MAKE-INSTANCE (QUOTE SCORE-EDITOR) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-SCORE-SUBBOX) :R 1.0 :G 1.0 :B 1.0 :APPLICATION-WINDOW (LET ((WIN (MAKE-INSTANCE (QUOTE ENP-APPLICATION-WINDOW) :SPACING 0.26000002 :PARTS (LIST (MAKE-INSTANCE (QUOTE PART) :Y 100.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "P" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :WIDTH 58.78001 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 10.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :DURATION 0.25 :STEM-X 8.265 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))))))))))) :DUR 0.25 :TOTAL-DUR 0.25)))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 2 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 0.25 :DURATION 0.5 :STEM-X 9.825001 :BEAMING-LEVEL 1 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))))))))))) :DUR 0.5 :TOTAL-DUR 0.5)))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 0.75 :DURATION 0.25 :STEM-X 12.945001 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))))))))))) :DUR 0.25 :TOTAL-DUR 0.25))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 16.505002 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE ACCENT) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) (MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))))))))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :STEM-X 20.585001 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE ACCENT) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) (MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))))))))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :DURATION 2.0 :STEM-X 24.665 :BEAMING-LEVEL -1 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE ACCENT) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) (MAKE-INSTANCE (QUOTE NATURAL-HARMONICS) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))))))))))) :DUR 2.0 :TOTAL-DUR 2.0))))) :UNIT-LENGTH 2) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 5.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 5.0 :UNIT-LENGTH 2 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 5.0 :DURATION 0.5 :STEM-X 30.825 :BEAMING-LEVEL 1 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE FERMATA) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) (MAKE-LOAD-TIME-INSTANCE 644717268 (QUOTE CRESCENDO) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))))))))))) :DUR 0.5 :TOTAL-DUR 0.5)))) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 5.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 5.5 :DURATION 0.25 :STEM-X 33.945 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE FERMATA) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) 644717268))) :DUR 0.25 :TOTAL-DUR 0.25)))) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 5.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 5.75 :DURATION 0.25 :STEM-X 35.505 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE FERMATA) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))) 644717268))) :DUR 0.25 :TOTAL-DUR 0.25))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 6.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 6.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 6.0 :STEM-X 39.065003 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :EXPRESSIONS (EVAL-LIST (QUOTE ((MAKE-INSTANCE (QUOTE FERMATA) :PLIST (LIST (MAKE-INSTANCE (QUOTE SCORE-PMC-PLUGIN-ID-OBJECT) :ID 3614015253 :RULES (LIST (LIST (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6)) (LIST (QUOTE QUOTE) (LIST 1/16 1/8 1/16 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE NATURAL-HARMONICS)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (QUOTE ?5) (QUOTE ?6))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE CRESCENDO)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4)) (LIST (QUOTE QUOTE) (LIST 1/8 1/16 1/16 1/4))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE FERMATA)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (QUOTE ?4))))) (LIST (QUOTE *) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3) (LIST (QUOTE ?IF) (LIST (QUOTE IF) (LIST (QUOTE EVERY) (LIST (QUOTE FUNCTION) (LIST (QUOTE LAMBDA) (LIST (QUOTE X) (QUOTE Y)) (LIST (QUOTE EQUALP) (LIST (QUOTE FACE-VALUE) (QUOTE X) :TOTAL-P NIL) (QUOTE Y)))) (LIST (QUOTE LIST) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)) (LIST (QUOTE QUOTE) (LIST 1/4 1/4 1/2))) (LIST (QUOTE ADD-EXPRESSION) (LIST (QUOTE QUOTE) (QUOTE ACCENT)) (QUOTE ?1) (QUOTE ?2) (QUOTE ?3)))))))))))))))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 7.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 7.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 7.0 :STEM-X 43.145005 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 8.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 8.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 8.0 :DURATION 0.25 :STEM-X 47.225007 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :DUR 0.25 :TOTAL-DUR 0.25)))) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 8.0 :UNIT-LENGTH 2 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 8.25 :DURATION 0.5 :STEM-X 48.785008 :BEAMING-LEVEL 1 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :DUR 0.5 :TOTAL-DUR 0.5)))) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 8.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 8.75 :DURATION 0.25 :STEM-X 51.905007 :BEAMING-LEVEL 2 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :DUR 0.25 :TOTAL-DUR 0.25))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 9.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 9.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 9.0 :STEM-X 55.465008 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE)))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 10 :X 4.0))))))) :EDIT-MODE NIL :SCALEFX 1.8199992 :SCALEFY 1.8199992 :TRANSLX 3.2 :TRANSLY -5.15 :X 150 :Y 150 :TITLE "Score-Editor1" :X 150 :Y 150 :WIDTH 935 :HEIGHT 771))) WIN) :XSCALE-FC 5.112022 :YSCALE-FC 5.112022 :Y-OFFSET 0.3000002)) :X 0.2993872192496041D0 :Y 1.7790370666766107D0 :W 2.6126962521318538D0 :H 0.5292287282248136D0 :BOX-STRING "Score-Editor" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "score") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "pitches") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "rtms/times")) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :X-PROPORTIONS (LIST (LIST 1)) :BORDER 0.012) :PW-FUNCTION (QUOTE SCORE-EDITOR) :OPEN-STATE-W 2.6126962521318538D0 :OPEN-STATE-H 0.5292287282248136D0) (MAKE-INSTANCE (QUOTE PWGL-CODE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "pattern" :CURVAL (LIST 1/16 1/8 1/16 1/4 1/4 1/2) :VALUE-STRING "(1/16 1/8 1/16 1/4 1/4 1/2)" :ARG-NAME (QUOTE PATTERN) :ARG-TYPE :VAR) (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "expression" :CURVAL :NATURAL-HARMONICS :VALUE-STRING ":natural-harmonics" :ARG-NAME (QUOTE EXPRESSION) :ARG-TYPE :VAR)) :X 1.2734821505856857D0 :Y 0.9196430357997041D0 :W 0.7642998443097264D0 :H 0.2 :BOX-STRING "pattern-rule" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1) :ORIG-GROUPING-LIST (LIST 1 1) :BORDER 0.012) :PW-FUNCTION (QUOTE CODE-BOX) :OPEN-STATE-W 0.7642998443097264D0 :OPEN-STATE-H 0.27391553672197367D0 :TEXT "(let* ((variab
	  (jbs-constraints::make-?1-from-to 1 (length pattern))))
    
    `(* ,@variab (ccl::?if 
                     (if (every #'(lambda (x y) (equalp (face-value x :TOTAL-P NIL) y)) (list ,@variab) ',pattern)
                         (ccl::add-expression ',(ccl::keyword-to-class expression) ,@variab)))))

;;;;; result ;;;;;;
; (* ?1 ?2 ?3 ?4 ?5 ?6 
;     (?IF (IF (EVERY (FUNCTION (LAMBDA (X Y) (EQUALP (FACE-VALUE X :TOTAL-P NIL) Y))) 
;                     (LIST ?1 ?2 ?3 ?4 ?5 ?6) (QUOTE (1/1 6 1/8 1/16 1/4 1/4 1/2))) 
;              (ADD-EXPRESSION (QUOTE NATURAL-HARMONICS) ?1 ?2 ?3 ?4 ?5 ?6))))") (MAKE-INSTANCE (QUOTE PWGL-CODE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "pattern" :CURVAL (LIST 1/8 1/16 1/16) :VALUE-STRING "(1/8 1/16 1/16)" :ARG-NAME (QUOTE PATTERN) :ARG-TYPE :VAR) (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "expression" :CURVAL :CRESCENDO :VALUE-STRING ":crescendo" :ARG-NAME (QUOTE EXPRESSION) :ARG-TYPE :VAR)) :X 2.1299224196180515D0 :Y 0.9196430357997041D0 :W 0.7686472568428862D0 :H 0.2 :BOX-STRING "pattern-rule" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1) :ORIG-GROUPING-LIST (LIST 1 1) :BORDER 0.012) :PW-FUNCTION (QUOTE CODE-BOX) :OPEN-STATE-W 0.8599429200392295D0 :OPEN-STATE-H 0.33043189965304354D0 :TEXT "(let* ((variab
	  (jbs-constraints::make-?1-from-to 1 (pw::list-max (list! (length pattern))))))
    
    
    `(* ,@variab (ccl::?if 
                     (if (every #'(lambda (x y) (equalp (face-value x :TOTAL-P NIL) y)) (list ,@variab) ',pattern)
                         (ccl::add-expression ',(ccl::keyword-to-class expression) ,@variab)))))") (MAKE-INSTANCE (QUOTE PWGL-CODE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "pattern" :CURVAL (LIST 1/8 1/16 1/16 1/4) :VALUE-STRING "(1/8 1/16 1/16 1/4)" :ARG-NAME (QUOTE PATTERN) :ARG-TYPE :VAR) (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "expression" :CURVAL :FERMATA :VALUE-STRING ":fermata" :ARG-NAME (QUOTE EXPRESSION) :ARG-TYPE :VAR)) :X 1.2734821505856857D0 :Y 0.5544508697868766D0 :W 0.7686472568428862D0 :H 0.2 :BOX-STRING "pattern-rule" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1) :ORIG-GROUPING-LIST (LIST 1 1) :BORDER 0.012) :PW-FUNCTION (QUOTE CODE-BOX) :OPEN-STATE-W 0.8599429200392295D0 :OPEN-STATE-H 0.33043189965304354D0 :TEXT "(let* ((variab
	  (jbs-constraints::make-?1-from-to 1 (pw::list-max (list! (length pattern))))))
    
    
    `(* ,@variab (ccl::?if 
                     (if (every #'(lambda (x y) (equalp (face-value x :TOTAL-P NIL) y)) (list ,@variab) ',pattern)
                         (ccl::add-expression ',(ccl::keyword-to-class expression) ,@variab)))))") (MAKE-INSTANCE (QUOTE PWGL-CODE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "pattern" :CURVAL (LIST 1/4 1/4 1/2) :VALUE-STRING "(1/4 1/4 1/2)" :ARG-NAME (QUOTE PATTERN) :ARG-TYPE :VAR) (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "expression" :CURVAL :ACCENT :VALUE-STRING ":accent" :ARG-NAME (QUOTE EXPRESSION) :ARG-TYPE :VAR)) :X 2.1299224196180515D0 :Y 0.5544508697868766D0 :W 0.7686472568428862D0 :H 0.2 :BOX-STRING "pattern-rule" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1) :ORIG-GROUPING-LIST (LIST 1 1) :BORDER 0.012) :PW-FUNCTION (QUOTE CODE-BOX) :OPEN-STATE-W 0.8599429200392295D0 :OPEN-STATE-H 0.33043189965304354D0 :TEXT "(let* ((variab
	  (jbs-constraints::make-?1-from-to 1 (pw::list-max (list! (length pattern))))))
    
    
    `(* ,@variab (ccl::?if 
                     (if (every #'(lambda (x y) (equalp (face-value x :TOTAL-P NIL) y)) (list ,@variab) ',pattern)
                         (ccl::add-expression ',(ccl::keyword-to-class expression) ,@variab)))))")) :X 5 :Y 5 :SCALEFX 0.4600437582542672D0 :SCALEFY 0.4600437582542672D0 :TRANSLX -0.07302153782302895D0 :TRANSLY 0.13589926918664974D0 :CONNECTIONS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 6 :OUT-BOX 0 :PWBOX2 0 :INPUT-BOX 3 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 5 :OUT-BOX 0 :PWBOX2 0 :INPUT-BOX 2 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 4 :OUT-BOX 0 :PWBOX2 0 :INPUT-BOX 1 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 3 :OUT-BOX 0 :PWBOX2 0 :INPUT-BOX 0 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 2 :OUT-BOX 0 :PWBOX2 1 :INPUT-BOX 0 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 0 :OUT-BOX 0 :PWBOX2 1 :INPUT-BOX 1 :DRAW-MODE :5POINT :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2))) :X 5 :Y 5 :WIDTH 730 :HEIGHT 530))) (WINDOW-SELECT WIN) WIN)