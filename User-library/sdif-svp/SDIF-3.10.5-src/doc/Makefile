# Makefile.in generated by automake 1.6.3 from Makefile.am.
# doc/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.am,v 1.7 2003/03/18 14:22:52 roebel Exp $
#
# ./doc/Makefile.am             September 2000          Patrice Tisserand
#
# Source file for GNU automake, generates Makefile.in.
#
# now merged with:
#
# doc/Makefile			4. November 1998	Diemo Schwarz
#
# Makefile for automatic documentation.

# This file is part of the IRCAM SDIF Library (http://www.ircam.fr/sdif)
#
# Copyright (C) 1998, 1999, 2000 by IRCAM - Centre Pompidou, Paris, France.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# See file COPYING for further informations on licensing terms.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# For any information regarding this and other IRCAM software, please
# send email to:  sdif@ircam.fr

# $Log: Makefile.am,v $
# Revision 1.7  2003/03/18 14:22:52  roebel
# Fixed trailing backslash before empty line
#
# Revision 1.6  2003/03/07 17:33:00  roebel
# Removed wildcard by explicite list of files. Automake does not handle
# wildcards correctly.
#
# Revision 1.5  2001/10/26 15:04:18  schwarz
# Made Makefile.am output the old, carefully hand-crafted Makefile, plus
# the automake blabber.  Had to change some variable names (no '-'),
# remove ifs, fix gcc -E who suddenly doesn't like unbalanced comments
# in strings any more, and take care of CVS and Makefiles when cleaning.
#
# This is the first step to a true autoconf'ed doc generation, where the
# install host and directory are user-configurable, and the doc
# generation program's version and existence is checked for by
# configure.  (Maybe that will no longer be cocoon then --- it refuses
# to run and is awkward anyway.)
#
# Revision 1.4  2001/05/02 09:34:38  tisseran
# Change License from GNU Public License to GNU Lesser Public License.
#
# Revision 1.3  2000/10/30 11:35:08  roebel
# mv from state dead to state up-to-date to override cvs bg
#
# Revision 1.1.2.2  2000/10/26  17:27:32  schwarz
# Added header with copyright and links to all Makefile.am and configure.in.

# This is the old Log: Makefile,v:
#
# Revision 3.9  2000/10/27 20:02:49  roebel
# autoconf merged back to main trunk
#
# Revision 3.8  2000/08/27  15:21:22  schwarz
# Added standards dir, local install option when on installhost.
#
# Revision 3.7  2000/08/22  16:34:16  schwarz
# Added tutorial.
#
# Revision 3.6  2000/08/07  15:12:04  schwarz
# Cocoon is installed for groups now, more docs.
#
# Revision 3.5  2000/07/19  18:10:13  schwarz
# Added todo section to internal doc.
#
# Revision 3.4  1999/10/07  15:22:10  schwarz
# Added trademark notice in index.
#
# Revision 3.3  1999/08/26  15:29:23  schwarz
# Cocoon (3.2) works only on fresh dir.
# Simplified installation: Don't rely on make on install host (and
# that all the generating programs work there), but generate locally,
# then copy on install host and postprocess cocoon, replacing local links.
#
# Revision 3.2  1999/04/30  13:45:53  schwarz
# Don't blurp horrible perl code, rather lightly put decent
# "Gendoc from to" message.
#
# Revision 3.1  1999/03/14  10:54:42  virolle
# SdifStdErr add
#
# Revision 2.3  1999/01/21  16:36:23  schwarz
# Beefed up the SDIF library user manual.  It now has the sections
# User Manual		(as before, but with navigating toc frame and
# 			 crosslinked to the function reference)
# Function Reference	(automatic cocoon doc with navigating toc)
# Tutorial		(coming soon, a quick introduction to get started)
# Utilities		(description of the utility programs coming with
# 			 the library)
#
# Revision 2.2  1999/01/06  14:50:13  schwarz
# Automatic Cocoon documentation of the sdif library in one single web
# page.  It comes in two flavours: intern and extern.  Intern
# describes ALL functions and data structures, extern describes only
# the API that users of the library should use.
#
# Revision 2.1  1998/12/21  18:26:48  schwarz
# Inserted copyright message.
#
# Revision 2.0  1998/11/29  11:20:51  virolle
# english documentation for SDIF norm.
#
# Revision 1.1  1998/11/10  14:56:40  schwarz
# Added makefile to generate cocoon documentation.
SHELL = /bin/sh

srcdir = .
top_srcdir = ..
prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/SDIF
pkglibdir = $(libdir)/SDIF
pkgincludedir = $(includedir)/SDIF
top_builddir = ..

ACLOCAL = ${SHELL} /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-apple-darwin9.4.0

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :

VPATH = pics intern extern
AMTAR = ${SHELL} /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/missing --run tar
AS = @AS@
AWK = awk
CC = gcc
CXX = 
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = /bin/echo
HAVE_PTHREAD = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
OBJDUMP = @OBJDUMP@
PACKAGE = SDIF
PROGLIST = querysdif$(EXEEXT) sdifextract$(EXEEXT) sdiftotext$(EXEEXT) tosdif$(EXEEXT)
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_LIBS = 
RANLIB = ranlib
SDIF_VERSION_MAJOR = 3
SDIF_VERSION_MINOR = 10
SDIF_VERSION_RELEASE = 5
SELLIB = libsdif.la
SELLIBCPP = 
STRIP = strip
VERSION = 3.10.5
acx_pthread_config = 
am__include = include
am__quote = 
install_sh = /Users/mika/PWGL-User/User-library/sdif-svp/SDIF-3.10.5-src/install-sh

# this is for automake
EXTRA_DIST = Patch.html          SdifNormBar.html    SdifProgBar.html \
	 download.html     indexNorm.html SdifManuelBar.html \
	 SdifNormDoc.html    SdifProgDoc.html  index.html  \
	 indexProg.html SdifManuelDoc.html  SdifNormDocFr.html  Todo.html   \
         indexManuel.html


SUBDIRS = pics extern

# this is the original hand-crafted Makefile

# web pages are accessible from INSTALLHOST and to be placed to INSTALLDIR
INSTALLHOST = maelzel
INSTALLDIR = /usr/local/www/ircam/equipes/analyse-synthese/sdif
INSTALLURLBASE = /equipes/analyse-synthese/sdif

# files and directories to copy to webserver
INSTALLSRC = Makefile $(wildcard *.html) $(INSTALLDIRS)
INSTALLDIRS = pics standard extern intern

# these are all overriden when installing
HERE = $(subst /a/,/net/,$(PWD))
ABS_ROOT = $(HERE)/..
WEBBASE = $(HERE)
URLBASE = $(HERE)

# ($* is what matches % in a pattern rule)
COCOONDIR = $*/cocoon
WEBROOT = $(WEBBASE)/$(COCOONDIR)
URLROOT = $(URLBASE)/$(COCOONDIR)
#INSTALLURL	= cocoon
INSTALLURL = $(INSTALLURLBASE)/$(COCOONDIR)

#		  http://www.ircam.fr/$(INSTALLURLBASE)/$(COCOONDIR)
COCOON = cocoon	# /u/formes/schwarz/bin/$(ARCH)/cocoon
PREPROC = gcc -E -P -ansi -x c 
INSTALLHTML = perl -pi -e '$$c+=s|(href="*)$(URLROOT)|$$1$(INSTALLURL)|ig;'\
			   -e 'END { print STDERR "$$c substitutions\nof   $(URLROOT)\nwith $(INSTALLURL)\n"; }'


#else
#	rsh	=
#	sep	= ;
#endif
makedependency = # Makefile # when changing preprocessor options
headerdir = $(ABS_ROOT)/sdif
headerfiles = $(wildcard $(headerdir)/*.h)	# same as $(shell ls .../*.h)

matlabdlarch = download/sdif-matlab.tar.gz
matlabdldir = $(HOME)/src/formesutils/matlab
matlabdlbase = loadsdif writesdif
matlabdlfiles = $(foreach sufx,m mexaxp mexlx,$(matlabdlbase:%=%.$(sufx))) \
		  loadsdiffile.m loadsdifflat.m sdifexist.m


intern_defs = "-DSENTINELS=nosentinels" \
		  "-DMEMBERSENTINEL=librarysentinel xxxnosentinelxxx" \
		  "-DCUSTOMIZE="


extern_defs = "-DSENTINELS="  "-DMEMBERSENTINEL=membersentinel /EMPTY*DOC:" \
		  "-DCUSTOMIZE=librarysentinel xxxnosentinelxxx"



# alphabetical list of all declarations
ahead_extern = <a href="$(URLROOT)/SDIF.html\#data" target=doc><strong>Data Structures</strong></a><br>\
		  <a href="$(URLROOT)/SDIF.html\#functions" target=doc><strong>Function Prototypes</strong></a><br><br>


ahead_intern = $(ahead_extern)


#
# augmented HTML
#
eindsuf = by-subject alpha tutorial utilities
iindsuf = by-subject alpha todo
emain = $(eindsuf:%=extern/%-main.html)
esec = $(eindsuf:%=extern/%-sec.html)
egenerated = $(emain) $(esec) extern/by-subject-doc.html \
				   extern/tutorial-doc.html

imain = $(iindsuf:%=intern/%-main.html)
isuf = $(iindsuf:%=intern/%-sec.html)
igenerated = $(imain) $(isuf) intern/by-subject-doc.html

var_by_subject = SUBJECT
var_alpha = ALPHA
var_tutorial = TUTORIAL
var_utilities = UTILITIES
var_todo = TODO
doc_by_subject = by-subject-doc.html
doc_alpha = cocoon/SDIF.html\#functions
doc_tutorial = tutorial-doc.html
doc_utilities = utilities-doc.html
doc_todo = ../Todo.html
src_extern = SdifManuelDoc.html
src_intern = SdifProgDoc.html

selcolor = bgcolor="yellow"
ewarn = 's"(\$$Id.*\$$)"DO NOT EDIT!!!\n     This file $@ is generated from $<\n     $$1\n     by the Makefile target eframes.\n";'
subdir = doc
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/sdif/config.h
CONFIG_CLEAN_FILES =
DIST_SOURCES =

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  doc/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-generic distclean-libtool \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-libtool clean-recursive distclean \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-recursive


#ifneq ($(HOST), $(INSTALLHOST))
	rsh	= rsh $(INSTALLHOST)
	sep	= \;

.PHONY:		tutorial

%.html:		%.tex
		hevea -fix -exec xxdate.exe $< -o $@

all:		cocoon html
html:		eframes iframes
.PHONY:		cocoon eframes iframes abc new clean iclean eclean

tut:		tutc tutorial reload
tutc:		extern/tutorial.c $(HOME)/src/SDIF/autoconf/SDIF-3.2.0/include/sdif.h
		gcc -I$(HOME)/src/SDIF/autoconf/SDIF-3.2.0/include \
		    -L$(HOME)/src/SDIF/autoconf/SDIF-3.2.0/sdif \
		    $< -lsdif
#		gcc -I/u/formes/include/sdif -L$(HOME)/lib/i686/Linux_2.2.5 

tutorial:	extern/tutorial-doc.html
extern/tutorial-doc.html:	extern/tutorial-doc.tex

#
# cocoon
#

cocoon:		ext extern/alpha-toc.html int intern/alpha-toc.html 
abc:		extern/alpha-toc.html intern/alpha-toc.html
new:		clean all

reload:
		netscape -remote 'reload()'
show:		showintern
show%:		%
		netscape -remote 'openURL(file:$(WEBROOT)/SDIF.html)'

int: 		intern/cocoon/SDIF.lnk
ext: 		extern/cocoon/SDIF.lnk

%/cocoon/SDIF.lnk:	sdif.%.cocoon
		-find $(@D) -type f \! -name M\* -ls -exec $(RM) '{}' \; 	# cocoon 3.2 works only on clean dir
		$(COCOON) -s -x $<	# -s: leave SDIF.lnk 

# generate cocoon config file for one big web page with all defs
sdif.%.cocoon:	sdif.src $(headerfiles) $(makedependency)
		@echo Generating cocoon config file $@ from $<
		$(PREPROC) $< -o $@  $($*_defs) \
			-DWEBROOT=$(WEBROOT) -DURLROOT=$(URLROOT) \
			"-DLIBRARY=library SDIF $(ABS_ROOT)/sdif/ ."

%/alpha-toc.html:	%/cocoon/SDIF.lnk Makefile
		@echo Gendoc $< $@
		@sort $< | perl -n -e '\
		BEGIN { print qq|<body bgcolor=white>\n$(ahead-$*)\n\
				 <strong>All Declarations:</strong><br>\n|; } \
		END {print "</body>";} \
		s|\\#|$(URLROOT)/SDIF.html#|; s|<a href=|<a target=doc href=|;\
		split "%";  print "$$_[2]<br>\n"' >$@

# make substitution file for anchor to replace function names in
# SdifManuelDoc.html by bold link to def in cocoon doc 
%/linkit.lnk:	%/cocoon/SDIF.lnk Makefile
		@echo Gendoc $< $@
		@perl -n -e '\
		s|\\#|cocoon/SDIF.html\\#|;  s|<a href=|<a href=|; \
		split "%";  print "%$$_[1]%<b>$$_[2]</b>%\n"' $< >$@

eframes:	$(egenerated)
iframes:	$(igenerated)

# dependencies
$(emain):	extern/default-main.html
$(esec):	extern/default-sec.html
$(imain):	intern/default-main.html
$(isec):	intern/default-sec.html

# avoid making (thus destroying) these source files!
%/default-sec.html %/default-main.html:
		@echo Preserving $@

%-sec.html:	default-sec.html Makefile
		@echo Gendoc $(@D)/$(<F) $@
		@perl -p -e $(ewarn) -e 's!$(var_$(*F))!$(selcolor)!;' $(@D)/$(<F) >$@

%-main.html:	default-main.html Makefile
		@echo Gendoc $(@D)/$(<F) $@
		@perl -p -e $(ewarn) -e 's!default-doc\.html!$(doc_$(*F))!;' \
		     -e 's!default-(sec|toc)\.html!$(*F)-$$1.html!;' $(@D)/$(<F) >$@

# use cocoon's anchor to replace function names in
# SdifManuelDoc.html by bold link to def in cocoon doc 
%/by-subject-doc.html:	%/linkit.lnk $(src-$*)
		@echo Gendoc $(src-$(*F)) $@
		@anchor $< $(src-$(*F)) $@
		@perl -pi -e $(ewarn) -e 's|(src="*)pics|$$1../pics|;' $@

#
# Install
#

install:	$(INSTALLSRC) 
		$(rsh) 	cp -rf $(INSTALLSRC:%=$(PWD)/%) $(INSTALLDIR) $(sep) \
		  	$(MAKE) -C $(INSTALLDIR) URLBASE=$(URLBASE) \
				postinst_intern postinst_extern
#\				$(matlabdlarch)

installdl:
		$(rsh)  cp -rf $(PWD)/Makefile $(INSTALLDIR) $(sep) \
		  	$(MAKE) -C $(INSTALLDIR) URLBASE=$(URLBASE)
#\				$(matlabdlarch)

# this is running on INSTALLHOST!
postinst-%:
		@echo ----- replacing links in $(INSTALLDIR)/$*
		@find $(INSTALLDIR)/$* -name \*.html -print \
		| xargs $(INSTALLHTML)

#$(matlabdlarch): download $(matlabdlfiles:%=$(matlabdldir)/%)
#		tar cvf - -C $(matlabdldir) $(matlabdlfiles) | gzip -9 >$@

#
# Misc
#

clean:		eclean iclean
		rm -f intern/cocoon/* extern/cocoon/* sdif.*.cocoon
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
