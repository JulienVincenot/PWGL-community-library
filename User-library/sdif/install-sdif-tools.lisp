(in-package :sdif)

(defparameter *installation-message* "To make this library functional, PWGL needs to compile and install the SDIF command-line tools that are distributed with this library (originally http://sdif.sourceforge.net/). For this, you need to have the Apple Developer Tools installed in your system. See http://developer.apple.com/Tools/ for more information.~%
This version of the SDIF command-line tools provided with PWGL is slightly different from the official one. Therefore, it will be installed for you locally inside the SDIF library folder (~a). If you already have installed the original tools or plan to do so, the two versions should be able to coincide without any problems. ~%~%Do you want to proceed with the installation?")
(defparameter *err-gcc* "There was an error when trying to compile the SDIF tools. Probably gcc not found.
Make sure you have installed the Apple Developer Tools.")
(defparameter *err-make* "There was an error when trying to compile the SDIF tools.")
(defparameter *err-configure* "The configuration of the SDIF tools failed.")
(defparameter *err-install* "The installation of the SDIF tools failed.")
(defparameter *no-err* "The installation of the SDIF tools was succesful.~%~%You can now continue using the library.")

(defun install-sdif-tools()
  (labels ((report-asdf-install-error (str)
             (capi:display-message (format () "~%~a~%See the console messages for further information." str))
             (return-from install-sdif-tools))
           (sdif-tools-installed-for-this-user-p (&optional result)
             (let ((lib-dir (ccl::pwgl-location "sdif" #p"install-pathname")))
               (if result             
                   (with-open-file (stream lib-dir :direction :output :if-does-not-exist :create :if-exists :supersede)
                     (write (ccl::pwgl-location "sdif") :stream stream))
                 (when (probe-file lib-dir)
                   (ccl::when-let (install-directory (with-open-file (stream lib-dir) (read stream () ())))         
                     (equal (pathname-directory install-directory) (pathname-directory (ccl::pwgl-location "sdif")))))))))
    (let ((lib-dir (ccl::pwgl-location "sdif"))
          err-make err-configure err-install)
      (unless (sdif-tools-installed-for-this-user-p)
        (ccl::when-let (dir (car (directory (make-pathname :name "SDIF-3*" :type :wild :defaults lib-dir))))
          (when (capi:prompt-for-confirmation (format () *installation-message* lib-dir) :default-button :ok)
            (unless (ccl::shell-command-exists-p "gcc")
              (report-asdf-install-error *err-gcc*))
            (ccl::with-PWGL-console ("Installing SDIF tools..." :show-p t :temp t)
              (setq err-configure (ccl:call-system-showing-output (format () "cd '~a';./configure --disable-shared --prefix=~a" dir lib-dir)))
              (if (zerop err-configure)
                  (setq err-make (ccl:call-system-showing-output (format () "cd '~a'; make" dir)))
                (report-asdf-install-error *err-configure*))
              (if (zerop err-make)
                  (setq err-install (ccl:call-system-showing-output (format () "cd '~a'; make install" dir)))
                (report-asdf-install-error *err-make*))
              (unless (zerop err-install)
                (report-asdf-install-error *err-install*))
              (sdif-tools-installed-for-this-user-p t)
              (format t "~%~%~%~%INSTALLATION COMPLETE! YOU CAN NOW CLOSE THIS TERMINAL WINDOW")
              (capi:display-message *no-err*))))))))

;;; (install-sdif-tools)